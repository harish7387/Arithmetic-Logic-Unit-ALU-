module ALU_tb;
    reg [3:0] A, B;
    reg [2:0] c;
    wire [3:0] Result;
    wire Carry_out, Zero;
  ALU alu_inst (.A(A), .B(B), .c(c), .Result(Result), .Carry_out(Carry_out), .Zero(Zero));
    initial begin
        $dumpfile("dump.vcd");
        $dumpvars(0, ALU_tb);
      $display("A B c | Result Carry Zero");
        A = 4'b0101; B = 4'b0011;
      c = 3'b000; #10; $display("%b %b %b | %b %b %b", A, B, c, Result, Carry_out, Zero);
      c = 3'b001; #10; $display("%b %b %b | %b %b %b", A, B, c, Result, Carry_out, Zero);
      c = 3'b010; #10; $display("%b %b %b | %b %b %b", A, B, c, Result, Carry_out, Zero);
      c = 3'b011; #10; $display("%b %b %b | %b %b %b", A, B, c, Result, Carry_out, Zero);
      c = 3'b100; #10; $display("%b %b %b | %b %b %b", A, B, c, Result, Carry_out, Zero);
        $finish;
    end
endmodule
