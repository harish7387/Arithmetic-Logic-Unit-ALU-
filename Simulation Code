module ALU (
    input  [3:0] A,
    input  [3:0] B,
    input  [2:0] c,
    output reg [3:0] Result,
    output reg Carry_out,
    output Zero
);
    always @(*) begin
        Carry_out = 0;
      case (c)
            3'b000: {Carry_out, Result} = A + B;
            3'b001: {Carry_out, Result} = A - B;
            3'b010: Result = A & B;
            3'b011: Result = A | B;
            3'b100: Result = ~A;
            default: Result = 4'b0000;
        endcase
    end
    assign Zero = (Result == 4'b0000) ? 1'b1 : 1'b0;
endmodule
