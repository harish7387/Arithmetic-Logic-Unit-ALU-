`timescale 1 ns / 1 ns
module alu(a,b,x,y,z);
input [3:0]a,b;
input [2:0]x;
output [3:0]y;
output z;

reg [3:0]y;
reg z;

always @(a,b,x) begin
case (x)
3'b000 : begin
{z,y} = a+b;
end
3'b001 : begin
{z,y} = a-b;
end
3'b010 : begin
y = a & b;
end
3'b011 = begin
y = a | b;
end
3'b100 = begin
y = a ^ b;
end
3'b101 = begin
y = ~a;
end

default: begin
y = 4'b0;
end
endcase
end 
endmodule
